@model Models.Anomaly

@{
    ViewBag.Title = "ویرایش " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Anomalies", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.EventDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.EventDate)
                @Html.ValidationMessageFor(model => model.EventDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Code)
                @Html.ValidationMessageFor(model => model.Code)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Summery, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Summery)
                @Html.ValidationMessageFor(model => model.Summery)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Place, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Place)
                @Html.ValidationMessageFor(model => model.Place)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reporter, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Reporter)
                @Html.ValidationMessageFor(model => model.Reporter)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResponseUser, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.ResponseUser)
                @Html.ValidationMessageFor(model => model.ResponseUser)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hse, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Hse)
                @Html.ValidationMessageFor(model => model.Hse)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReportLevel, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.ReportLevel)
                @Html.ValidationMessageFor(model => model.ReportLevel)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Deadline, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Deadline)
                @Html.ValidationMessageFor(model => model.Deadline)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Conclusion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Conclusion)
                @Html.ValidationMessageFor(model => model.Conclusion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EffectivnessDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.EffectivnessDate)
                @Html.ValidationMessageFor(model => model.EffectivnessDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.Kendo().Upload().Name("fileUpload").Multiple(false)
	 @Html.HiddenFor(model => model.ImageUrl)
                @Html.ValidationMessageFor(model => model.ImageUrl)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Notes)
                @Html.ValidationMessageFor(model => model.Notes)
            </div>
        </div>
 
	    @Html.EditorFor(model => model.StatusId)

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

	 @Html.HiddenFor(model => model.CreationDate)
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group" id="buttons">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت" class="btn btn-primary" />
				@Html.ActionLink("بازگشت به فهرست", "Index")
            </div>
        </div>
    </div>
}

