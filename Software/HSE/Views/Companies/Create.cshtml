@model Models.Company

@{
    ViewBag.Title = "افزودن " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
}

<h2>افزودن @Html.DisplayNameFor(model => model)</h2>

@using (Html.BeginForm("Create", "Companies", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        @Html.ValidationSummary(true)

        <div class="form-group">
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.Title)

                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupervisorUserId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SupervisorUserId", String.Empty)
                @Html.ValidationMessageFor(model => model.SupervisorUserId)
            </div>
        </div>
					 <div class="form-group">
            @Html.LabelFor(model => model.CompanyTypeId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyTypeId", String.Empty)
                @Html.ValidationMessageFor(model => model.CompanyTypeId)
            </div>
        </div>
					
	        <div class="form-group">
		        @Html.LabelFor(model => model.ContractItemFileUrl, new {@class = "control-label col-md-2"})
		        <div class="col-md-10">
			        @Html.Kendo().Upload().Name("fileUpload").Multiple(false)
			        @Html.ValidationMessageFor(model => model.ContractItemFileUrl)
		        </div>
	        </div>


	        <div class="form-group">
		        @Html.LabelFor(model => model.ChartFileUrl, new {@class = "control-label col-md-2"})
		        <div class="col-md-10">
			        @Html.Kendo().Upload().Name("fileUpload2").Multiple(false)
			        @Html.ValidationMessageFor(model => model.ChartFileUrl)
		        </div>
	        </div>


	        <div class="form-group">
			<div class="col-md-2">
            </div>
            <div class="col-md-10">
                    @Html.EditorFor(model => model.IsActive)

				@Html.LabelFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>
					
	        <div class="form-group">
		        @Html.LabelFor(model => model.OfficialEmployee, new { @class = "control-label col-md-2" })
		        <div class="col-md-10">
			        @Html.EditorFor(model => model.OfficialEmployee)

			        @Html.ValidationMessageFor(model => model.OfficialEmployee)
		        </div>
	        </div>

	        <div class="form-group">
		        @Html.LabelFor(model => model.ContractEmployee, new { @class = "control-label col-md-2" })
		        <div class="col-md-10">
			        @Html.EditorFor(model => model.ContractEmployee)

			        @Html.ValidationMessageFor(model => model.ContractEmployee)
		        </div>
	        </div>

	        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.Description)

                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group" id="buttons">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ایجاد" class="btn btn-primary" />
				@Html.ActionLink("بازگشت به فهرست", "Index")
            </div>
        </div>
        </div>
</div>
}

